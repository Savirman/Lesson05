"""
Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка должна содержать данные о фирме:
название, форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.

Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].

Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:

[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

Подсказка: использовать менеджер контекста.
"""
"""
Программа считывает данные о выручке и издержках фирм, подсчитывает прибыль и заносит эти данные в новый файл.
Файл, из которого происходит чтение данных - Example07.txt
Результат работы программы заносится в файл Example07json.json
"""
import json

# Работа с файлом, в котором хранятся данные фирм
with open("Example07.txt", encoding = "utf-8") as my_file:
    # Определение количества строк - в каждой отдельой строке находится информация по одной фирме
    content = my_file.readlines()
    scount = len(content)

    with open("Example07.txt", encoding="utf-8") as my_file:
        # Словарь, куда будут заноситься сведения о прибыли фирм
        firms = {}
        # Список, в который поместятся данные о прибыли фирм и средней прибыли
        firms_list = []
        profit_sum = 0
        for i in range(0, scount):
            # Получение сведений о фирме из файла
            content = my_file.readline()
            line = content.rstrip('\n')
            line = line.split()
            # Расчет прибыли по каждой фирме с занесением в словарь в случае, если прибыль есть
            profit = int(line[2]) - int(line[3])
            if profit > 0:
                firms_dict = {line[0]: profit}
                firms.update(firms_dict)
                profit_sum = profit_sum + profit
            # Расчет средней прибыли с занесением в отдельный словарь
            average_profit = profit_sum / 3
            profit_dict = {'average_profit': average_profit}
        # Формирование общего списка с данными о фирмах, их прибыли и средней прибыли
        firms_list.append(firms)
        firms_list.append(profit_dict)
#        print(firms)
#        print(profit_dict)

# Запись в файл сведений о фирмах, их прибыли и средней прибыли по всем фирмам в виде json
with open("Example07json.json", "w", encoding = "utf-8") as file_stream:
    json.dump(firms_list, file_stream, ensure_ascii=False)
